name: Publish Dev Build to TestPyPI

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Hatch
        run: pip install hatch

      - name: Generate Development Version
        run: |
          # Use date+time (hour minute) to ensure uniqueness
          # Format: 0.1.0.devYYYYMMDD.HHMM
          # Example: 0.1.0.dev20250828.1435 (August 28, 2025 at 14:35)

          # Read base version from __init__.py
          BASE_VERSION=$(python -c "
          import ast
          with open('mplang/__init__.py', 'r') as f:
              tree = ast.parse(f.read(), filename='mplang/__init__.py')
          version = '0.1.0'
          for node in tree.body:
              if isinstance(node, ast.Assign):
                  for target in node.targets:
                      if isinstance(target, ast.Name) and target.id == '__version__':
                          if isinstance(node.value, ast.Str):
                              version = node.value.s
                          elif hasattr(ast, 'Constant') and isinstance(node.value, ast.Constant):
                              version = node.value.value
          print(version)
          ")

          # Generate timestamp-based dev version
          TIMESTAMP=$(date +%Y%m%d.%H%M)
          DEV_VERSION="${BASE_VERSION}.dev${TIMESTAMP}"

          # Set HATCH_VERSION environment variable for this build
          echo "HATCH_VERSION=${DEV_VERSION}" >> $GITHUB_ENV

          echo "Base version: ${BASE_VERSION}"
          echo "Development version: ${DEV_VERSION}"

      - name: Build package
        run: hatch build

      - name: Publish package to TestPyPI
        run: hatch publish -r testpypi
        env:
          HATCH_INDEX_USER: __token__
          HATCH_INDEX_AUTH: ${{ secrets.TEST_PYPI_API_TOKEN }}
