# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from mplang.protos.v1alpha1 import tee_pb2 as mplang_dot_protos_dot_v1alpha1_dot_tee__pb2


class TEEMgrServiceStub(object):
    """Service definition for TEE attestation
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Init = channel.unary_unary(
                '/mplang.protos.v1alpha1.TEEMgrService/Init',
                request_serializer=mplang_dot_protos_dot_v1alpha1_dot_tee__pb2.InitRequest.SerializeToString,
                response_deserializer=mplang_dot_protos_dot_v1alpha1_dot_tee__pb2.InitResponse.FromString,
                _registered_method=True)
        self.GetTEEReport = channel.unary_unary(
                '/mplang.protos.v1alpha1.TEEMgrService/GetTEEReport',
                request_serializer=mplang_dot_protos_dot_v1alpha1_dot_tee__pb2.GetTEEReportRequest.SerializeToString,
                response_deserializer=mplang_dot_protos_dot_v1alpha1_dot_tee__pb2.GetTEEReportResponse.FromString,
                _registered_method=True)


class TEEMgrServiceServicer(object):
    """Service definition for TEE attestation
    """

    def Init(self, request, context):
        """Initialize TEE session for attestation
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTEEReport(self, request, context):
        """Get TEE attestation report
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TEEMgrServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Init': grpc.unary_unary_rpc_method_handler(
                    servicer.Init,
                    request_deserializer=mplang_dot_protos_dot_v1alpha1_dot_tee__pb2.InitRequest.FromString,
                    response_serializer=mplang_dot_protos_dot_v1alpha1_dot_tee__pb2.InitResponse.SerializeToString,
            ),
            'GetTEEReport': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTEEReport,
                    request_deserializer=mplang_dot_protos_dot_v1alpha1_dot_tee__pb2.GetTEEReportRequest.FromString,
                    response_serializer=mplang_dot_protos_dot_v1alpha1_dot_tee__pb2.GetTEEReportResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mplang.protos.v1alpha1.TEEMgrService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('mplang.protos.v1alpha1.TEEMgrService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class TEEMgrService(object):
    """Service definition for TEE attestation
    """

    @staticmethod
    def Init(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mplang.protos.v1alpha1.TEEMgrService/Init',
            mplang_dot_protos_dot_v1alpha1_dot_tee__pb2.InitRequest.SerializeToString,
            mplang_dot_protos_dot_v1alpha1_dot_tee__pb2.InitResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTEEReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mplang.protos.v1alpha1.TEEMgrService/GetTEEReport',
            mplang_dot_protos_dot_v1alpha1_dot_tee__pb2.GetTEEReportRequest.SerializeToString,
            mplang_dot_protos_dot_v1alpha1_dot_tee__pb2.GetTEEReportResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
