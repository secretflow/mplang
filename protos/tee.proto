// Copyright 2025 Ant Group Co., Ltd.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package secretflow;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";

// Service definition for TEE attestation
service TEEAttestationService {
  // Get TEE attestation report
  rpc GetTEEReport(GetTEEReportRequest) returns (GetTEEReportResponse) {
    option (google.api.http) = {
      get : "/v1/{session_name=sessions/*}/tee_report"
    };
  }
}

// Request message for TEE attestation report generation
message GetTEEReportRequest {
  // The resource name of the session. Format: "sessions/{session_id}".
  string session_name = 1 [ (google.api.field_behavior) = REQUIRED ];

  // PEM-encoded public key for TEE attestation
  string pem_public_key = 2 [ (google.api.field_behavior) = REQUIRED ];

  // The JSON serialized string of
  // secretflowapis.v2.sdc.ual_pb2.UnifiedAttestationGenerationParams
  string generation_params_json = 3 [ (google.api.field_behavior) = REQUIRED ];
}

// Response message for TEE attestation report
message GetTEEReportResponse {
  // Public key for TEE party (PEM format)
  string pem_public_key = 1 [ (google.api.field_behavior) = OPTIONAL ];

  // TEE mode: "sim" or "tdx"
  string tee_mode = 2 [ (google.api.field_behavior) = REQUIRED ];

  // The JSON serialized string of
  // secretflowapis.v2.sdc.ual_pb2.UnifiedAttestationReport
  string report_json = 3 [ (google.api.field_behavior) = REQUIRED ];
}
