[build-system]
requires = ["setuptools>=61.0.0", "wheel", "grpcio-tools==1.56.2"]
build-backend = "setuptools.build_meta"

[[tool.uv.index]]
name = "aliyun"
url = "https://mirrors.aliyun.com/pypi/simple/"
default = true

[tool.uv]
default-groups = ["dev"]

[project]
name = "mplang"
dynamic = ["version"]
description = "Multi-Party Programming Language"
readme = "README.md"
license = { file = "LICENSE" }
authors = [
    { name = "SecretFlow Team", email = "secretflow-contact@service.alipay.com" },
]
requires-python = ">=3.10"
dependencies = [
    "spu==0.9.4.dev20250618",  # TODO(jint): use a more flexible version constraint like "spu >= 0.9.4"
    "grpcio==1.56.2",
    "grpcio-tools==1.56.2",
    "protobuf>=4.21.6,<5.0",
    "ibis-framework==10.8.0",
    "sqlglot==27.7.0",         # for ibis parse_sql
    "lightphe>=0.0.15,<0.1.0", # for PHE backend implementation
    # runtime only
    "google-api-core==2.24.2", # TODO(jint): this is only required for runtime.
    "pandas>=2.0.0",
    "duckdb>=1.0.0",
]

[dependency-groups]
dev = [
    "ruff",
    "mypy",
    "pytest",
    "pytest-cov",
    "pytest-xdist",
    "pytest-testmon",
    "sphinx>=7.0.0",
    "sphinx_rtd_theme>=1.2.0",
    "mypy-protobuf==3.6.0",
    # for ibis test
    "pyarrow==21.0.0",
    "pyarrow_hotfix==0.7",
]
examples = [
    "numpy==1.26.4",
    "tensorflow-datasets==4.9.9",
    "tensorflow==2.18.1",
    "scikit-learn==1.7.1",
    "keras==3.11.1",
]

[tool.setuptools.packages.find]
include = ["mplang*"]

[tool.setuptools.package-data]
mplang = ["protos/*.proto"]

[tool.setuptools.dynamic]
version = { attr = "mplang.__version__" }

[tool.ruff]
# Use recommended settings with black-compatible formatting
line-length = 88
target-version = "py310"
# Enable preview mode for latest formatting improvements
preview = true

# Exclude generated files and protobuf code
exclude = [
    "mplang/protos/",    # Protobuf generated Python files
    "protos/",           # Protobuf source files
    "**/protos/**/*.py", # Any protobuf files in protos directories
    "**/*_pb2.py",       # Generated protobuf message files
    "**/*_pb2_grpc.py",  # Generated protobuf gRPC files
    "**/*_pb2.pyi",      # Generated protobuf type stubs
    "**/*_pb2_grpc.pyi", # Generated protobuf gRPC type stubs
]

[tool.ruff.lint]
# Use recommended rule set
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "ICN", # flake8-import-conventions
    "PIE", # flake8-pie
    "PYI", # flake8-pyi
    "RSE", # flake8-raise
    "RUF", # ruff-specific rules
]

# Ignore some rules that cause too much noise initially
ignore = [
    "E501",   # line-too-long (will be handled by formatter when possible)
    "E731",   # lambda-assignment (can be acceptable in some cases)
    "RUF002", # ambiguous-unicode-character-docstring (may be intentional)
]

# Per-file ignores for specific cases
[tool.ruff.lint.per-file-ignores]
"examples/**/*.py" = [
    "B023",
] # Allow intentional loop variable binding in examples
"tutorials/**/*.py" = [
    "B023",
] # Allow intentional loop variable binding in tutorials
"tutorials/pitfalls/*.py" = [
    "B023",
] # These files intentionally demonstrate pitfalls
"tests/**/*.py" = ["B017"] # Allow generic exception catching in tests

[tool.ruff.format]
# Use black-compatible formatting
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true           # Format code in docstrings
docstring-code-line-length = "dynamic" # Use same line length for docstring code

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disable_error_code = ["import-untyped"]

[[tool.mypy.overrides]]
# ignore errors in all files in `mplang/protos`
module = ["mplang.protos.*"]
ignore_errors = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--strict-markers --strict-config"
